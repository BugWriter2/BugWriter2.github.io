(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{368:function(t,e,i){"use strict";i.r(e);var a=i(11),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"image-classification"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#image-classification"}},[t._v("#")]),t._v(" Image Classification")]),t._v(" "),i("h2",{attrs:{id:"cnn"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#cnn"}},[t._v("#")]),t._v(" CNN")]),t._v(" "),i("p",[i("strong",[t._v("Parameter calculation")])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://cdn-images-1.medium.com/freeze/max/1000/0*vxqEUxcBMWsQtUem.png?q=20",alt:"cnn"}})]),t._v(" "),i("ul",[i("li",[i("code",[t._v("input dimension")]),t._v(": (I_w, I_h, n_channel). When n_channel = 1, it is a 2D input")]),t._v(" "),i("li",[i("code",[t._v("kernel dimension")]),t._v(": (K, K, n_channel). Kernel is not always a square, it can be (K_w, K_h, n_channel)")]),t._v(" "),i("li",[i("code",[t._v("output size")]),t._v(":\n"),i("img",{attrs:{src:"https://latex.codecogs.com/gif.latex?O%3D%5Cfrac%7BI-K+2%20P%7D%7BS%7D+1",alt:"kernel"}})]),t._v(" "),i("li",[i("code",[t._v("output dimension")]),t._v(": (O, O, output_channels)\n"),i("img",{attrs:{src:"https://cdn-images-1.medium.com/freeze/max/1000/0*EiMclEM0Yg9TF77g.jpg?q=20",alt:"output"}})])]),t._v(" "),i("p",[i("strong",[t._v("Ways of improving accuracy")])]),t._v(" "),i("ul",[i("li",[t._v("wider: increase number of output channels")]),t._v(" "),i("li",[t._v("deeper: increase number of neural networks")]),t._v(" "),i("li",[t._v("resolution larger: increase input size")])]),t._v(" "),i("h2",{attrs:{id:"resnet"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#resnet"}},[t._v("#")]),t._v(" ResNet")]),t._v(" "),i("p",[i("strong",[t._v("conv1x1")])]),t._v(" "),i("ul",[i("li",[t._v("Dimensionality reduction/augmentation")]),t._v(" "),i("li",[t._v("Reduce computational load by reducing parameter map")]),t._v(" "),i("li",[t._v("Add non-linearity (RELU)")])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://miro.medium.com/max/700/1*dNaikOfrGzUaJ2EzRIl4tw.png",alt:"conv"}})]),t._v(" "),i("p",[i("img",{attrs:{src:"https://miro.medium.com/max/700/1*3kgQ1HJvVOGK_LWS_ANoBA.png",alt:"conv1"}}),t._v(" "),i("img",{attrs:{src:"https://miro.medium.com/max/700/1*C2ei51Og0WMpoEesMFEvcA.png",alt:"conv2"}})]),t._v(" "),i("p",[i("strong",[t._v("Batch normalization")])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://latex.codecogs.com/gif.latex?O_%7Bb%2C%20c%2C%20x%2C%20y%7D%20%5Cleftarrow%20%5Cgamma_%7Bc%7D%20%5Cfrac%7BI_%7Bb%2C%20c%2C%20x%2C%20y%7D-%5Cmu_%7Bc%7D%7D%7B%5Csqrt%7B%5Csigma_%7Bc%7D%5E%7B2%7D+%5Cepsilon%7D%7D+%5Cbeta_%7Bc%7D%20%5Cquad%20%5Cforall%20b%2C%20c%2C%20x%2C%20y",alt:"bn"}})]),t._v(" "),i("ul",[i("li",[i("code",[t._v("I")]),t._v(": input")]),t._v(" "),i("li",[i("code",[t._v("O")]),t._v(": output")]),t._v(" "),i("li",[i("code",[t._v("b,c,x,y")]),t._v(": batch, channel, width, height")]),t._v(" "),i("li",[i("code",[t._v("u, sigma")]),t._v(":\n"),i("ul",[i("li",[t._v("if training, computed from batch")]),t._v(" "),i("li",[t._v("if testing,\n"),i("ul",[i("li",[t._v("using average of whole training set")]),t._v(" "),i("li",[t._v("a moving average calculated during training by: "),i("code",[t._v("running = 0.1*running + 0.9 * sample")])])])])])])]),t._v(" "),i("p",[t._v("Origin")]),t._v(" "),i("ul",[i("li",[i("p",[t._v("deeper is better:")]),t._v(" "),i("ul",[i("li",[t._v("but gradient vanishing or exploding when layer is deeper[the input x is one of the term of gradient chain]")]),t._v(" "),i("li",[t._v("but poor activations like "),i("a",{attrs:{href:"https://ml-cheatsheet.readthedocs.io/en/latest/activation_functions.html#sigmoid",target:"_blank",rel:"noopener noreferrer"}},[t._v("sigmoid"),i("OutboundLink")],1),t._v(" "),i("ul",[i("li",[t._v("gradient vanishing: at some time when intermediate input too large or too small")]),t._v(" "),i("li",[t._v("gradient vanishing: derivative is at most 0.25, the front layer's gradient is chain product of later ones, some 0.1s' product goes to 0 very quickly [to alleviate, use modified version: "),i("code",[t._v("1 / (1 + exp(-ax))")]),t._v(" with larger "),i("code",[t._v("a")]),t._v("]")])])]),t._v(" "),i("li",[t._v("but poor activations like "),i("a",{attrs:{href:"https://ml-cheatsheet.readthedocs.io/en/latest/activation_functions.html#tanh",target:"_blank",rel:"noopener noreferrer"}},[t._v("tanh"),i("OutboundLink")],1),t._v(" [gradient vanishing at some time when intermediate input too large or too small]:")]),t._v(" "),i("li",[t._v("but poor activations like "),i("a",{attrs:{href:"https://ml-cheatsheet.readthedocs.io/en/latest/activation_functions.html#relu",target:"_blank",rel:"noopener noreferrer"}},[t._v("relu"),i("OutboundLink")],1),t._v(" "),i("ul",[i("li",[t._v("gradient vanishing: negative [to alleviate, use LeakyReLU, but lose some non-linearity]")]),t._v(" "),i("li",[t._v("gradient exploding: positive, return 1 and by multiplying other terms in gradient chain, boom!")])])])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://i.stack.imgur.com/gMpB4.png",alt:"activation"}})])]),t._v(" "),i("li",[i("p",[t._v("weight initialization matters:")]),t._v(" "),i("ul",[i("li",[t._v("random normalization or uniform, weight cannot be too small or too large, thus "),i("strong",[t._v("each output's variance should keep the same")]),t._v(" "),i("ul",[i("li",[t._v("weight too large(then input too large) => relu is okay, but others produce vanishing gradient")]),t._v(" "),i("li",[t._v("weight too small(then input too small) => all produce vanishing gradient [1. intrinsic reasons; 2. small x in a term in gradient chain]")])])]),t._v(" "),i("li",[i("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/64464584",target:"_blank",rel:"noopener noreferrer"}},[t._v("xavier + tanh, he + relu"),i("OutboundLink")],1),t._v(" "),i("ul",[i("li",[i("strong",[t._v("variance is not strictly the same")]),t._v(", but better")]),t._v(" "),i("li",[t._v("complexity of finding optima increases => convergence is slower, and "),i("strong",[t._v("learning rate should be small")])])])])])]),t._v(" "),i("li",[i("p",[t._v("larger learning rate is preferred:")]),t._v(" "),i("ul",[i("li",[t._v("faster convergence")]),t._v(" "),i("li",[t._v("less likely to get stuck in sub minima")]),t._v(" "),i("li",[t._v("error term's mean is 0(gradient is linear form of x), and variance is bounded by learning rate. Larger lr adds more noise.\n"),i("img",{attrs:{src:"https://latex.codecogs.com/gif.latex?%5Calpha%20%5Cnabla_%7BS%20G%20D%7D%28x%29%3D%5Cunderbrace%7B%5Calpha%20%5Cnabla%20%5Cell%28x%29%7D_%7B%5Ctext%20%7Bgradient%20%7D%7D+%5Cunderbrace%7B%5Cfrac%7B%5Calpha%7D%7B%7CB%7C%7D%20%5Csum_%7Bi%20%5Cin%20B%7D%5Cleft%28%5Cnabla%20%5Cell_%7Bi%7D%28x%29-%5Cnabla%20%5Cell%28x%29%5Cright%29%7D_%7B%5Ctext%20%7Berror%20lerm%20%7D%7D",alt:"lr"}})])])])]),t._v(" "),i("p",[t._v("batch normalization")]),t._v(" "),i("ul",[i("li",[t._v("better variance control than xavier and he")]),t._v(" "),i("li",[t._v("normalizes the exploding weights\n"),i("ul",[i("li",[t._v("remove unimportant info in batch, height, width dimension as it normalizes in different channels")]),t._v(" "),i("li",[t._v("less info results in faster convergence and simplicity in fitting")])])]),t._v(" "),i("li",[t._v("enables larger learning rate for better performance[convergence and optima]")])]),t._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[t._v("references")]),t._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"https://papers.nips.cc/paper/7996-understanding-batch-normalization.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Understanding Batch Normalization"),i("OutboundLink")],1)]),t._v(" "),i("li",[i("a",{attrs:{href:"https://www.zhihu.com/question/326034346/answer/1251898824",target:"_blank",rel:"noopener noreferrer"}},[t._v("Regularization"),i("OutboundLink")],1)])])]),t._v(" "),i("p",[i("strong",[t._v("Residual block + skip connection")])]),t._v(" "),i("ul",[i("li",[t._v("if input dimension the same as residual block's output dimension(left), the skip connection: "),i("code",[t._v("X_skip = X")]),t._v(", is a identity block")]),t._v(" "),i("li",[t._v("otherwise(right), the skip connect block is a "),i("code",[t._v("conv1x1 + bn block")])]),t._v(" "),i("li",[t._v("skip connection mitigates vanishing gradient, as the input is forwarded")]),t._v(" "),i("li",[t._v("there are many variants for residual blocks")])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://www.researchgate.net/profile/Antonio_Theophilo/publication/321347448/figure/fig2/AS:565869411815424@1511925189281/Bottleneck-Blocks-for-ResNet-50-left-identity-shortcut-right-projection-shortcut.png",alt:"rb"}})]),t._v(" "),i("p",[i("img",{attrs:{src:"https://miro.medium.com/max/3368/1*8CwtKoYZsX9-VTDXbeKHAQ.png",alt:"rb1"}})]),t._v(" "),i("p",[i("strong",[t._v("5 stages")])]),t._v(" "),i("ul",[i("li",[t._v("1st stage: 3 paddings for up, bottom, right and left")]),t._v(" "),i("li",[t._v("1st stage's max pooling: 1 paddings")]),t._v(" "),i("li",[t._v("other padding options:\n"),i("ul",[i("li",[i("code",[t._v("VALID")]),t._v(": no padding")]),t._v(" "),i("li",[i("code",[t._v("SAME")]),t._v(": evenly left and right, if the padding number is odd, the extra is put at the right to make input and output size the same (ignoring stride)")])])]),t._v(" "),i("li",[t._v("blue(2nd), yellow(3rd), pink(4th), green(5th)")]),t._v(" "),i("li",[t._v("2nd to 5th stages uses "),i("code",[t._v("SAME")]),t._v(" padding")]),t._v(" "),i("li",[t._v("every blue, yellow, purple and green block below is a "),i("code",[t._v("residual block + skip connection")])]),t._v(" "),i("li",[t._v("from 2nd to 5th stages, every "),i("code",[t._v("residual block + skip connection")]),t._v(" is repeated in some defined times (cfg)")]),t._v(" "),i("li",[t._v("full line: skip connection uses identity block")]),t._v(" "),i("li",[t._v("dotted line: skip connection uses conv1x1+bn block")]),t._v(" "),i("li",[t._v("average pooling: 1x1")]),t._v(" "),i("li",[t._v("112 => 56 => 28 => 14 => 7 => 2048 => 1000")])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://www.codeproject.com/KB/AI/1248963/resnet-r-700.png",alt:"stages"}})]),t._v(" "),i("p",[i("img",{attrs:{src:"https://i.ibb.co/xGtSXPK/stage1.png",alt:"stages1"}})]),t._v(" "),i("p",[i("img",{attrs:{src:"https://oncoml.io/wp-content/uploads/2020/01/resnet-101.png",alt:"stages2"}})]),t._v(" "),i("p",[i("img",{attrs:{src:"https://i.ibb.co/nMrDfvm/output.png",alt:"stages3"}})]),t._v(" "),i("h2",{attrs:{id:"class-activation-map"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#class-activation-map"}},[t._v("#")]),t._v(" Class activation map")]),t._v(" "),i("p",[t._v("Global activation pooling:")]),t._v(" "),i("ul",[i("li",[t._v("regularization: reduce dimension, drop information and avoid overfitting")]),t._v(" "),i("li",[t._v("localization")])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://alexisbcook.github.io/assets/global_average_pooling.png",alt:"gap"}})]),t._v(" "),i("p",[t._v("Produce class activation map:")]),t._v(" "),i("ul",[i("li",[t._v("adds a gap between last conv and fc")]),t._v(" "),i("li",[t._v("compute weighted linear sum\n"),i("ul",[i("li",[i("code",[t._v("w")]),t._v(" is from fc layer")]),t._v(" "),i("li",[i("code",[t._v("fk")]),t._v(" is from conv layer's k kernel\n"),i("img",{attrs:{src:"https://latex.codecogs.com/gif.latex?S_%7Bc%7D%3D%5Csum_%7Bk%7D%20w_%7Bk%7D%5E%7Bc%7D%20%5Csum_%7Bx%2C%20y%7D%20f_%7Bk%7D%28x%2C%20y%29%3D%5Csum_%7Bx%2C%20y%7D%20%5Csum_%7Bk%7D%20w_%7Bk%7D%5E%7Bc%7D%20f_%7Bk%7D%28x%2C%20y%29",alt:"wls"}})])])])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://miro.medium.com/max/700/0*Xs1rIupHWd8oD8m0.jpg",alt:"cam"}})]),t._v(" "),i("h2",{attrs:{id:"efficientnet"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#efficientnet"}},[t._v("#")]),t._v(" EfficientNet")]),t._v(" "),i("h3",{attrs:{id:"模型结构"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#模型结构"}},[t._v("#")]),t._v(" 模型结构")]),t._v(" "),i("p",[t._v("图例：\n"),i("img",{attrs:{src:"https://i.ibb.co/fYxCLmH/en-ef0.png",alt:"EfficientNet"}}),t._v(" "),i("img",{attrs:{src:"https://i.ibb.co/PZgLkjR/en-ef2.jpg",alt:"EfficientNet"}})]),t._v(" "),i("p",[t._v("EfficientNet-B0结构图：\n"),i("img",{attrs:{src:"https://i.ibb.co/61TYSGD/en-ef1.jpg",alt:"EfficientNet"}})]),t._v(" "),i("ul",[i("li",[i("p",[t._v("EfficientNet-B0是用强化学习的方式通过神经网络架构搜索设计得到的。学习时的优化目标为：")]),t._v(" "),i("img",{staticStyle:{display:"block",margin:"auto"},attrs:{src:"https://i.ibb.co/S7GDPXB/en-nas.png",width:"400"}}),t._v(" "),i("ul",[i("li",[i("code",[t._v("T")]),t._v(": 目标计算量")]),t._v(" "),i("li",[i("code",[t._v("w")]),t._v(": -0.07，超参系数，用来衡量精度和计算量的权重。")]),t._v(" "),i("li",[i("code",[t._v("m")]),t._v(": 模型网络")])])]),t._v(" "),i("li",[i("p",[i("strong",[i("code",[t._v("MBConv")])]),t._v(": "),i("strong",[t._v("移动翻转瓶颈卷积")]),t._v(" (Mobile inverted Bottleneck Convolution), 作为EfficientNet的核心模块，该模块是对其他卷积网络模型提出的各种模块的组装，其内部可拆分成4个子结构：")]),t._v(" "),i("ul",[i("li",[i("strong",[t._v("深度可分离卷积")]),t._v(" (depthwise separable convolution), 该结构借鉴于Xception。该结构将原始的卷积操作分成了两步："),i("strong",[t._v("深度卷积")]),t._v(" (depthwise convolution) 和 "),i("strong",[t._v("逐点卷积")]),t._v(" (pointwise convolution)。深度卷积时，核尺寸正常，但是一个卷积核 (kernel)只负责一个通道。逐点卷积的核尺寸是1x1，一个卷积核负责所有通道。与深度卷积相反，逐点卷积实现了跨通道信息的利用，两者结合使用之后实现了类似原始卷积操作的效果，并且大大减少了参数数量。")]),t._v(" "),i("li",[i("strong",[t._v("翻转残差")]),t._v(" (inverted residual block)，该子结构借鉴于MobileNetV2，通常与深度可分离卷积结合使用。残差模块会将输入和卷积结果进行跳越连接。原始的残差模块，例如ResNet中的模块，是两头通道维度大，中间通道维度小。 原始残差模块通过减少中间通道的维度来减少参数数量。翻转之后的模块首先对通道进行了"),i("strong",[t._v("扩展")]),t._v(" (expansion) 操作, 即对输入进行1x1的逐点卷积并根据扩展比例(expand ratio)改变输出通道维度（如扩展比例为3时，会将通道维度提升3倍。但如果扩展比例为1，则直接省略该1x1的逐点卷积和其之后批归一化和激活函数），因为后续进行深度卷积而不是原始卷积，所以参数并不多，因此通道维度并不需要减少，最后形成了两头通道维度小，中间通道维度大的结构。甚至由于深度卷积减少的参数过多，最后一次卷积时为了减少信息进一步损失， 翻转残差并没有启动激活函数。")]),t._v(" "),i("li",[i("strong",[t._v("压缩激发")]),t._v(" (squeeze and excitation block)，借鉴于SENet。该结构类似于"),i("strong",[t._v("注意力机制")]),t._v("，通过特征图 (feature map) 为自身学习一个特征权值，通过单位乘的方式得到一组加权后的新的特征权值，以此来实现对每个通道赋予不同权重。")]),t._v(" "),i("li",[i("strong",[t._v("随机深度")]),t._v(" (stochastic depth), 借鉴于优化版的ResNet。深层网络学到的信息并不一定全部有效，因此很容易过拟合。于是一种dropout的思想在2012年由Hinton提出。Dropout时，会摒弃一些神经元的连接，减少神经元之间的相互作用。因为dropout是随机的，所以训练时还获得了很多版本的简化模型，最后预测时实现了多个简化模型的融合，提升了网络的泛化能力。随机深度与dropout类似，该结构会按一定概率跳过一整个残差模块，使网络获得随机深度，以此来缩短模型训练时间并且增强网络的泛化能力。")])])]),t._v(" "),i("li",[i("p",[i("strong",[i("code",[t._v("Swish")])]),t._v(": 是谷歌大脑团队基于强化学习搜索到的非单调的激活函数，被证明在某些情况下比ReLU更优。")]),t._v(" "),i("img",{staticStyle:{display:"block",margin:"auto"},attrs:{src:"https://i.ibb.co/1rsYZSv/en-swish.jpg",width:"400"}})])]),t._v(" "),i("h3",{attrs:{id:"复合缩放"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#复合缩放"}},[t._v("#")]),t._v(" 复合缩放")]),t._v(" "),i("p",[t._v("为了获得更好的精度，放大卷积神经网络是一种广泛的方法。然而，放大卷积神经网络的过程从来没有很好的理解过，目前通用的几种方法是放大卷积神经网络的深度、宽度和分辨率：")]),t._v(" "),i("ul",[i("li",[i("strong",[t._v("宽度")]),t._v("： 增加卷积网络的通道维度，更宽的网络能够捕获更细粒度的特征")]),t._v(" "),i("li",[i("strong",[t._v("深度")]),t._v("：增加卷积网络的深度，即卷积层的数量。更深的网络可以捕获更丰富和更复杂的特征，但是由于梯度弥散、梯度爆炸等问题，训练难度也会增大。")]),t._v(" "),i("li",[i("strong",[t._v("分辨率")]),t._v("：增加输入图片的分辨率，更清晰的图片往往会有更细粒度的特征")])]),t._v(" "),i("p",[t._v("在之前都是单独放大这三个维度中的一个，但是单独放大某个维度很容易出现准确率饱和的情况，如下图所示：")]),t._v(" "),i("img",{staticStyle:{display:"block",margin:"auto"},attrs:{src:"https://i.ibb.co/ckMCC4Z/en-full.png"}}),t._v(" "),i("p",[t._v("尽管任意放大两个或者三个维度也是可能的，但是任意缩放需要繁琐的人工调参同时可能产生的是一个次优的精度和效率。因此EfficientNet系列提出了复合缩放 (compound scaling) 的算法, "),i("strong",[t._v("先确定基础网络")]),t._v("，"),i("strong",[t._v("然后")]),t._v("通过 AutoML 的方式网格搜索"),i("strong",[t._v("三个维度的缩放比例")]),t._v("，使用者可以根据自己的需求和硬件资源，按照已经搜索到的缩放比例，"),i("strong",[t._v("使用一个复合系数Φ成倍的缩放基础网络")]),t._v("来获得适合自己的网络。")]),t._v(" "),i("img",{staticStyle:{display:"block",margin:"auto"},attrs:{src:"https://i.ibb.co/YfTNDSV/en-compound.png"}}),t._v(" "),i("p",[t._v("因为卷积神经网络可以视为几个stage的组合，每个stage重复不同的次数，而每个相同的stage的重复block都有相同的结构，所以卷积神经网络的函数可以定义如下：")]),t._v(" "),i("img",{staticStyle:{display:"block",margin:"auto"},attrs:{src:"https://i.ibb.co/pX5N47z/en-compoundeq1.png",width:"400"}}),t._v(" "),i("ul",[i("li",[i("code",[t._v("i")]),t._v(": stage 索引")]),t._v(" "),i("li",[i("code",[t._v("F")]),t._v(": 残差模块卷积操作")]),t._v(" "),i("li",[i("code",[t._v("X")]),t._v(": 输入")]),t._v(" "),i("li",[i("code",[t._v("L")]),t._v(": 残差模块重复次数")]),t._v(" "),i("li",[i("code",[t._v("H, W, C")]),t._v(": 高度，宽度，通道数")])]),t._v(" "),i("p",[t._v("通过AutoML搜索超参: "),i("code",[t._v("d")]),t._v(", "),i("code",[t._v("w")]),t._v(", "),i("code",[t._v("r")]),t._v(", 在给定硬件资源的条件下，最大化精度:")]),t._v(" "),i("img",{staticStyle:{display:"block",margin:"auto"},attrs:{src:"https://i.ibb.co/0DDgMxs/en-compoundeq2.png",width:"500"}}),t._v(" "),i("p",[t._v("其中"),i("code",[t._v("d")]),t._v("是深度缩放系数，"),i("code",[t._v("w")]),t._v("是宽度缩放系数，"),i("code",[t._v("r")]),t._v("是分辨率缩放系数。加倍深度，FLOPS也加倍，加倍宽度或分辨率，FLOPS变四倍，这里限制放大倍数的乘积约等于2，这样后续放大的时候，给定任意Φ, FLOPS总会被约束在 2^Φ。")]),t._v(" "),i("img",{staticStyle:{display:"block",margin:"auto"},attrs:{src:"https://i.ibb.co/nc4v4gH/en-compoundeq3.png",width:"200"}}),t._v(" "),i("p",[t._v("基础网络是EfficientNet-B0时:")]),t._v(" "),i("ul",[i("li",[i("code",[t._v("d")]),t._v(": 1,2")]),t._v(" "),i("li",[i("code",[t._v("w")]),t._v(": 1.1")]),t._v(" "),i("li",[i("code",[t._v("r")]),t._v(": 1.15")])]),t._v(" "),i("h2",{attrs:{id:"efficientnet-preparation"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#efficientnet-preparation"}},[t._v("#")]),t._v(" EfficientNet preparation")]),t._v(" "),i("ul",[i("li",[t._v("create conda environment"),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("conda create -n fc pip=19.1.1 cudatoolkit=10.1 cudnn=7.6.5 cupti=10.1\n")])])])]),t._v(" "),i("li",[t._v("install tensorflow 2.2 (tf2.2 only "),i("a",{attrs:{href:"https://www.tensorflow.org/install/source#gpu",target:"_blank",rel:"noopener noreferrer"}},[t._v("supports"),i("OutboundLink")],1),t._v(" cuda 10.1)"),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("pip install tensorflow==2.2.0 (gpu enabled)\n# or\nconda install -c conda-forge tensorflow=2.2.0 (search for tensorflow-gpu first)\n")])])]),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),i("p",[t._v("To verify if tensorflow gpu version is installed correctly, "),i("code",[t._v("tf.config.experimental.list_physical_devices('GPU')")]),t._v(" or "),i("code",[t._v("tf.test.is_gpu_available()")])])])]),t._v(" "),i("li",[t._v("download tensorflow models from git: "),i("code",[t._v("git clone https://github.com/tensorflow/models.git")])]),t._v(" "),i("li",[t._v("add tensorflow models to Python path as if the models were installed as packages (export for effect on every process. without export, only for current shell itself.)"),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("export PYTHONPATH=$PYTHONPATH:/path/to/models\n")])])])]),t._v(" "),i("li",[t._v("intall all dependencies"),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("pip install -r requirements.txt\n")])])])]),t._v(" "),i("li",[t._v("if using gpu, to "),i("a",{attrs:{href:"https://github.com/tensorflow/tensorflow/issues/35423#issuecomment-619526781",target:"_blank",rel:"noopener noreferrer"}},[t._v("solve issue of ptxas"),i("OutboundLink")],1),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("ln -s /usr/local/cuda/bin .  # or, ln -s /usr/local/cuda/bin/ptxas /storage/usr/miniconda3/envs/env_name/bin/ptxas\n# to remove\nunlink bin\n")])])])]),t._v(" "),i("li",[t._v("prepare data\n"),i("ul",[i("li",[t._v("tfds: "),i("code",[t._v("python -m tensorflow_datasets.scripts.download_and_prepare --datasets=official datasets")])]),t._v(" "),i("li",[t._v("tfrecord: "),i("code",[t._v("python imagenet_to_gcs.py --raw_data_dir=$IMAGENET_HOME --local_scratch_dir=$IMAGENET_HOME/tf_records --nogcs_upload")])])]),t._v(" "),i("div",{staticClass:"custom-block warning"},[i("p",{staticClass:"custom-block-title"},[t._v("folder structure")]),t._v(" "),i("p",[t._v("Default:")]),t._v(" "),i("ul",[i("li",[t._v("$IMAGENET_HOME: "),i("br"),t._v(" train/class1/file1;train/class2/file1; "),i("br"),t._v(" validation/file1; validation/file1; synset_labels.txt (class1\\n class2\\n)\nModified:")]),t._v(" "),i("li",[t._v("$IMAGENET_HOME: "),i("br"),t._v(" train/class1/file1;train/class2/file1; "),i("br"),t._v(" validation/class1/file1; validation/class2/file1;")])])])]),t._v(" "),i("li",[t._v("run\n"),i("ul",[i("li",[t._v("models saved in "),i("code",[t._v("meta")]),t._v(", "),i("code",[t._v("index")]),t._v(" and "),i("code",[t._v("data")]),t._v(" files")])]),t._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),i("p",[t._v("meta for graph definition;\nindex for variable table;\ndata for variable values.")])]),t._v(" "),i("ul",[i("li",[t._v("use tensor-board to view training statistics")]),t._v(" "),i("li",[t._v("models saved in "),i("code",[t._v(".pb")]),t._v(", "),i("code",[t._v("variables")]),t._v(" and "),i("code",[t._v("assets")])])]),t._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),i("p",[t._v(".pb is similar as meta;\nvariables save the data;\nassets save other files;")])]),t._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/113734249",target:"_blank",rel:"noopener noreferrer"}},[t._v("more info"),i("OutboundLink")],1)])])]),t._v(" "),i("li",[t._v("miscellaneous\n"),i("ul",[i("li",[t._v("check cuda version: "),i("code",[t._v("cat /usr/local/cuda/version.txt")])])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);