(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{358:function(e,a,s){"use strict";s.r(a);var t=s(11),n=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"kubernetes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes"}},[e._v("#")]),e._v(" Kubernetes")]),e._v(" "),s("h2",{attrs:{id:"structures"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#structures"}},[e._v("#")]),e._v(" Structures")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://d33wubrfki0l68.cloudfront.net/5cb72d407cbe2755e581b6de757e0d81760d5b86/a9df9/docs/tutorials/kubernetes-basics/public/images/module_03_nodes.svg",width:"400"}}),e._v(" "),s("img",{attrs:{src:"https://image-static.segmentfault.com/358/917/3589171250-5e58ccb5e2f53_fix732",width:"400"}}),e._v(" "),s("img",{attrs:{src:"https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Pod-networking.png/700px-Pod-networking.png",width:"400"}}),e._v(" "),s("img",{attrs:{src:"https://storage.googleapis.com/cdn.thenewstack.io/media/2017/11/07751442-deployment.png",width:"400"}})]),e._v(" "),s("h2",{attrs:{id:"commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commands"}},[e._v("#")]),e._v(" Commands")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("export KUBECONFIG=~/kube/test-kubeconfig")])]),e._v(" "),s("li",[s("code",[e._v("kubectl -n namespace apply -f xxx.yaml")])]),e._v(" "),s("li",[s("code",[e._v("kubectl -n namespace delete -f xxx.yaml")])]),e._v(" "),s("li",[s("code",[e._v("kubectl -n namespace get")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("pod(s)")]),e._v(": list all pods under this namespace")]),e._v(" "),s("li",[s("code",[e._v("pod pod_name")])]),e._v(" "),s("li",[s("code",[e._v("svc")]),e._v(": list all services under this namespace")]),e._v(" "),s("li",[s("code",[e._v("svc svc_name")])]),e._v(" "),s("li",[s("code",[e._v("deploy")]),e._v(": list all deployments under this namespace")]),e._v(" "),s("li",[s("code",[e._v("deploy deploy_name")])]),e._v(" "),s("li",[s("code",[e._v("deploy deploy_name -o yaml > xxx.k8s.yaml")]),e._v(": output current deployment config to yaml")]),e._v(" "),s("li",[s("code",[e._v("namespace(s)")]),e._v(": can be got without namespace")]),e._v(" "),s("li",[s("code",[e._v("node(s)")]),e._v(": can be got without namespace")])])]),e._v(" "),s("li",[s("code",[e._v("kubectl get pods -o wide --all-namespaces")])]),e._v(" "),s("li",[s("code",[e._v("kubectl -n namespace describe")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("pod pod_name")])]),e._v(" "),s("li",[s("code",[e._v("svc svc_name")])])])]),e._v(" "),s("li",[s("code",[e._v("kubectl -n namespace -f --since=1m logs")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("pod_name")])]),e._v(" "),s("li",[s("code",[e._v("-f")]),e._v(": if to stream the logs in real time")]),e._v(" "),s("li",[s("code",[e._v("--since")]),e._v(": logs since time ago")])])]),e._v(" "),s("li",[s("code",[e._v("kubectl -n namespace port-forward --address 0.0.0.0")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("svc/svc_name local_port:port_in_service_yaml")])]),e._v(" "),s("li",[s("code",[e._v("pod/pod_name local_port:port_in_deployment_yaml")])])])]),e._v(" "),s("li",[s("code",[e._v("sudo -E kubectl -n namespace port-forward")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("-E")]),e._v(" used to pass environment variables")]),e._v(" "),s("li",[s("code",[e._v("svc/svc_name 80:port_in_service_yaml")])]),e._v(" "),s("li",[s("code",[e._v("pod/pod_name 80:port_in_deployment_yaml")])])])]),e._v(" "),s("li",[s("code",[e._v("kubectl -n namespace scale deploy/deploy_name --replicas 0")])])]),e._v(" "),s("h2",{attrs:{id:"bindings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bindings"}},[e._v("#")]),e._v(" Bindings")]),e._v(" "),s("ul",[s("li",[e._v("makes sure a service has a pod binding, defined in "),s("code",[e._v("selector")]),e._v(" attribute in yaml")]),e._v(" "),s("li",[s("code",[e._v("selector")]),e._v(" in service should match "),s("code",[e._v("label")]),e._v(" in pods")])]),e._v(" "),s("h2",{attrs:{id:"ci-cd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ci-cd"}},[e._v("#")]),e._v(" CI/CD")]),e._v(" "),s("ul",[s("li",[e._v("services can be deployed once")]),e._v(" "),s("li",[e._v("product pods needed deploying every build")]),e._v(" "),s("li",[e._v("delete a pod and deployment will auto create a new one")]),e._v(" "),s("li",[e._v("internal service address: service_name.namespace")])]),e._v(" "),s("h2",{attrs:{id:"spinnaker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spinnaker"}},[e._v("#")]),e._v(" Spinnaker")]),e._v(" "),s("p",[e._v("When service, ingress, etc. are fixed, deployment updates can be done by spinnaker:")]),e._v(" "),s("ol",[s("li",[s("code",[e._v("kubectl -n namespace get deploy deploy_name -o yaml > xxx.k8s.yaml")])]),e._v(" "),s("li",[e._v("remove non-necessary attributes: "),s("code",[e._v("metadata.selfLink")]),e._v(", "),s("code",[e._v("metadata.uid")]),e._v(", "),s("code",[e._v("metadata.resourceVersion")]),e._v(", "),s("code",[e._v("metadata.creationTimestamp")]),e._v(", "),s("code",[e._v("metadata.annotations")]),e._v(", "),s("code",[e._v("metadata.generation")])]),e._v(" "),s("li",[e._v("reserve "),s("code",[e._v("namespace")])]),e._v(" "),s("li",[e._v("update "),s("code",[e._v("image: 'image_url:${parameters.IMAGE_VERSION}'")])]),e._v(" "),s("li",[e._v("copy to config")]),e._v(" "),s("li",[e._v("as long as there is character change in this yaml file, pod will be updated")])]),e._v(" "),s("p",[e._v("If no spinnaker, manually deployment:")]),e._v(" "),s("ol",[s("li",[e._v("same steps")]),e._v(" "),s("li",[e._v("remove "),s("code",[e._v("namespace")])]),e._v(" "),s("li",[e._v("update "),s("code",[e._v("image: image_url:right.version.0")])]),e._v(" "),s("li",[s("code",[e._v("kubectl -n namespace apply -f xxx.k8s.yaml")])])]),e._v(" "),s("h2",{attrs:{id:"dns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[e._v("#")]),e._v(" DNS")]),e._v(" "),s("p",[e._v("DNS queries "),s("strong",[e._v("may")]),e._v(" be expanded using the pod's /etc/resolv.conf. Kubelet sets this file for each pod. For example, a query for just data may be expanded to data.test.svc.cluster.local. The values of the search option are used to expand queries. To learn more about DNS queries, see the "),s("a",{attrs:{href:"https://www.man7.org/linux/man-pages/man5/resolv.conf.5.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("resolv.conf manual page"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("kubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" -it container-name -n its-namespace-name "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /etc/resolv.conf\n")])])]),s("p",[e._v("In some cases "),s("code",[e._v("/etc/resolv.conf")]),e._v(" is not used:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("kubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" -it container-name -n its-namespace-name "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("nslookup")]),e._v(" svc_name\n")])])]),s("h2",{attrs:{id:"remarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[e._v("#")]),e._v(" Remarks")]),e._v(" "),s("p",[e._v("currently(v1.18.2) kubectl cp non-existing file(source files) fails silently")])])}),[],!1,null,null,null);a.default=n.exports}}]);